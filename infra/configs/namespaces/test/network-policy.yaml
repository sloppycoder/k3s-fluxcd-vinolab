# by default K3S uses the following IP addresses/ranges
#  cluster api server, services: 10.43.0.0/16
#  pods: 10.42.0.0/16
#  cluster dns: 10.43.0.10
#
#  https://docs.k3s.io/cli/server?_highlight=10.43.0#networking
#

# 1. pods in same namespace can communicate freely
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: same-ns-only
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector: {}
  egress:
    - to:
        - podSelector: {}

---
# 2.1 allow pods to access cluster DNS service
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-dns
spec:
  podSelector: {}
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: UDP
          port: 53

---
# 2.2 allow egress to K8S api server
# the cidr range is broad, hopefully it works in most setups
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-k8s-api-egress
spec:
  podSelector: {}
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 10.43.0.1/32
      ports:
        - protocol: TCP
          port: 443

---
# 3.1 allow contour ingress for regular ingress
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-contour-ingress
spec:
  podSelector: {}
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: contour-external
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: contour-internal
      ports:
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 8000
        - protocol: TCP
          port: 80

---
# 3.2 allow knative-serving ingress to query-proxy port 8012
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-knative-serving
spec:
  podSelector:
    matchLabels:
      serving.knative.dev/service:
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: knative-serving
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: contour-external
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: contour-internal
      ports:
        - protocol: TCP
          port: 8012
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: knative-serving
      ports:
        - protocol: TCP
          port: 9090 # autoscaler port?

---
# 3.3 allow knative-eventing components to POST to app
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ingress-from-knative-eventing
  namespace: your-app-namespace
spec:
  podSelector: {}
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: knative-eventing
      ports:
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 8000

---
# 3.4 allow app to POST to knative-eventing components
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-egress-to-knative-eventing
  namespace: your-app-namespace
spec:
  podSelector: {}
  policyTypes:
    - Egress
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: knative-eventing
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 8080

---
# 4.1 allow ingress and egree for pods in infra namespaces
#    in order to allow communication with monitoring agents etc
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-infra
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: infra
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: infra

---
# 4.2 allow ingress and egree for pods in cnpg namespace
#      enable this if using CNPG to manage PostgreSQL servers
# TODO: narrow this down
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-cnpg
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: cnpg-system
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: cnpg-system

---
# 9. allow egress to hosts external to the cluster
# *** Keep this policy at the last ***, since it has a broad blocking rules
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-cluster-external-egress
spec:
  podSelector: {}
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 10.42.0.0/16
              - 10.43.0.0/16
