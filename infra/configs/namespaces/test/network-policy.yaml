# by default K3S uses the following IP addresses/ranges
#  cluster api server, services: 10.43.0.0/16
#  pods: 10.42.0.0/16
#  cluster dns: 10.43.0.10
#
#  https://docs.k3s.io/cli/server?_highlight=10.43.0#networking
#

# 1. pods in same namespace can communicate freely
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: same-ns-only
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector: {}
  egress:
    - to:
        - podSelector: {}

---
# 2.1 allow pods to access cluster DNS service
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-dns
spec:
  podSelector: {}
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 10.0.0.0/8
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53

---
# 2.2 allow egress to K8S api server
# the cidr range is broad, hopefully it works in most setups
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-k8s-api-egress
spec:
  podSelector: {}
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 10.43.0.1/32
      ports:
        - protocol: TCP
          port: 443

---
# 3.1 allow traefik ingress
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-traefik-ingress
spec:
  podSelector:
    matchLabels:
      local.dev/pod-type: app
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              app.kubernetes.io/name: traefik

---
# 3.2 allow knative-serving
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-knative-serving
spec:
  podSelector:
    matchExpressions:
      - key: serving.knative.dev/service
        operator: Exists
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kourier-system
          podSelector:
            matchLabels:
              app: 3scale-kourier-gateway
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: knative-serving
          podSelector: {}
      ports:
        # these ports are used by query-proxy
        - protocol: TCP
          port: 8012
        - protocol: TCP
          port: 8022
        - protocol: TCP
          port: 9090

---
# 3.3 allow knative-eventing components to POST to app
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ingress-from-knative-eventing
spec:
  podSelector:
    local.dev/pod-type: app
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: knative-eventing
      ports:
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 8000

---
# 3.4 allow app to POST to knative-eventing components, e.g. broker
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-egress-to-knative-eventing
spec:
  podSelector:
    local.dev/pod-type: app
  policyTypes:
    - Egress
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: knative-eventing
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 8080

---
# 4.1 allow ingress and egree for pods in infra namespaces
#   in order to allow communication with monitoring agents etc
#   for the moment cnpg-system is treated as infra, will refine later
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-infra
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: infra
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: cnpg-system
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: infra
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: cnpg-system

---
# 9. allow egress to hosts external to the cluster
# *** Keep this policy at the last ***, since it has a broad blocking rules
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-cluster-external-egress
spec:
  podSelector: {}
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 10.42.0.0/16
              - 10.43.0.0/16
