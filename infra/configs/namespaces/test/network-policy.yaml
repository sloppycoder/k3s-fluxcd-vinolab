# by default K3S uses the following IP addresses/ranges
#  cluster api server, services: 10.43.0.0/16
#  pods: 10.42.0.0/16
#  cluster dns: 10.43.0.10
#
#  https://docs.k3s.io/cli/server?_highlight=10.43.0#networking
#
# 1. pods in same namespace can communicate freely
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: same-ns-only
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector: {}
  egress:
    - to:
        - podSelector: {}

---
# 2. allow pods to access DNS service, the address range
#    depeonds on the cluster network setup
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-dns
spec:
  podSelector: {}
  egress:
    - to:
        - ipBlock:
            cidr: 10.0.0.0/8
      ports:
        - protocol: UDP
          port: 53

---
# 3. allow traefik-proxy ingress
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-traefik-proxy
spec:
  ingress:
    - from:
        - podSelector: {}
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              app.kubernetes.io/name: traefik

---
# 4. allow ingress and egree for pods in infra and cnpg namespaces
#    in order to allow communication with monitoring agents, controllers etc
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-infra-and-cnpg
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: infra
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: cnpg-system
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: infra
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: cnpg-system

---
# 5. allow egress to K8S api server
# the cidr range is broad, hopefully it works in most setups
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-k8s-api-egress
spec:
  podSelector: {}
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 10.43.0.1/32
      ports:
        - protocol: TCP
          port: 443

---
# 6. allow egress to hosts external to the cluster
# *** Keep this policy at the last, since it has a broad blocking of 10.0.0.0/8
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-cluster-external-egress
spec:
  podSelector: {}
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 10.42.0.0/16
              - 10.43.0.0/16
